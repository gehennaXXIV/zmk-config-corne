/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y          &kp U  &kp I      &kp O    &kp P     &kp MINUS
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H          &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                                &kp LALT  &mo 1  &kp SPACE    &kp BACKSPACE  &mo 2  &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC           &mt LC(N1) N1     &mt LC(N2) N2  &mt LC(N3) NUMBER_3  &mt LC(N4) NUMBER_4  &mt LC(N5) NUMBER_5              &trans             &mt LC(UP) UP      &trans               &kp N7        &kp NUMBER_8  &kp NUMBER_9
&kp CAPSLOCK      &kp N6            &kp N7         &kp NUMBER_8         &kp NUMBER_9         &kp NUMBER_0                     &mt LC(LEFT) LEFT  &mt LC(DOWN) DOWN  &mt LC(RIGHT) RIGHT  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6
&kp LEFT_CONTROL  &kp C_PLAY_PAUSE  &kp C_MUTE     &kp PG_UP            &kp PG_DN            &mt LA(PRINTSCREEN) LS(LG(S))    &trans             &trans             &trans               &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3
                                                   &kp LS(RG(RIGHT))    &trans               &trans                           &kp DELETE         &trans             &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE       &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &mt EQUAL MINUS
&kp LEFT_SHIFT  &trans    &trans  &trans    &trans    &trans       &kp PG_UP  &trans    &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&trans          &trans    &trans  &trans    &trans    &trans       &kp PG_DN  &trans    &trans        &trans                &trans                 &kp RIGHT_SHIFT
                                  &kp LGUI  &trans    &trans       &trans     &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &kp F11    &kp F12  &trans  &trans  &trans  &trans   &bt BT_CLR_ALL
&trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans   &bt BT_SEL 0
                        &trans  &trans  &trans     &trans   &trans  &trans
            >;
        };
    };
};
